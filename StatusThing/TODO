BROKEN
    JSON sourced dictionaries not distributed to StatusMenu
    JSON sourced dictionaries not distributed to StatusView (broke again)


Command line argument processing
    store user specified options to NSUserDefaults
    specify listening port number
    specify starting shape|color|symbol|symbolcolor|animation

StatusView
    range checking on user supplied symbol string
    centering symbols within a shape automatically, masking/clipping?
    statusItem.button blue highlight is being clipped 

    [done]Transition from NSBezierPath to CGPathRef pathes, remove dependency on NSBezierPath+BezierPathQuartzUtilties category
    [done]implement shapes as layers to help with animations
    [done]symbol toggle
    [done]shape toggle
    [done]StatusShapeNone ?
    [done]center StatusView in the NSStatusItem's button's view
    


StatusView animations
    intensity throb - animate alpha
    rotate shape, direction, speed, duration
    rotate outline
    rotate symbol, direction, speed, duration
    wobble, back and forth partial rotations ( < 45 degrees)
    shine / twinkle / lens flare
    switch between list of shapes: speed
    bounce within statusBarItem.button's bounding box
    shimmy side to side

StatusViewArrayController
StatusViewArray


Error Handling
    Fail when unable to bind the given port
    Send error notices back to clients when JSON doesn't work out

JSON dispatch object
    [fixed]Take the smarts out of the various Status* objects
    Use more KVC
    May need a few command-type verbs like reset and help ( JSON fragments enabled)

StatusMenu
    messages menuItem with sub-menus holding message list and a clear item
    message dict: { from:"Girl Behind You" text:"Do you like me" reply:{ "YES":"sweet!,"NO":"bogus!"}}
    Preferences

Preference Pane - per running instance?
    allow remote connections
    allow animations
    allow inset symbols
    allow notifications
    set limit on number of statusviews to create
    allow clients to create new statusviews
    blacklist clients
    whitelist clients
    change port on the fly

StatusListener
    sends a welcome string, probably not necessary?
    should respond to "help" with a list of things that it understands
    need to look into REST interface patterns?
    use HTTP, seems.. overkill-y?
    Publish Bonjour service
    bind to port 0 by default, OS picks an unused non-privileged port


AppleScript
    provide support for AppleScript - ugh.

NotificationCenter
    allow clients to generate Notifcations too?

Icon
    It Needs One.

Packaging?
    eventually

Shapes
    WiFi-like fan thingy
    Images supplied by client - integrate ASCIImage as an optional dependency
    System template images

Licensing
    Copyright messages in source need to be replace with CC appropriate verbiage

Strategy
    One application per port
        or
    One application listening on a port manages N different StatusViews ( array of StatusViews ).
        when a client sets an attribute on an item, creates if DNE?
        associate StatusView with a client supplied tag
        restrict client access to only the statusviews they initiate?

Update Checking Stuff
    Sparkle?

Client Bindings
    python
    ruby
    AppleScript
    native cocoa app


